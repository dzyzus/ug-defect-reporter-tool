@page "/defect/create"

@inject HttpClient Http

@using DefectReporter.Shared.Models.Application

<h3>Report new defect</h3>

@if (successMessage != null)
{
    <div class="alert alert-success">
        @successMessage
    </div>
}

@if (errorMessage != null)
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}

<form @onsubmit="CreateDefect">
    <div class="form-group">
        <label for="Title">Tytuł:</label>
        <input type="text" id="Title" class="form-control" @bind="defect.Title" />
    </div>
    <div class="form-group">
        <label for="Description">Opis:</label>
        <textarea id="Description" class="form-control" @bind="defect.Description"></textarea>
    </div>
    <div class="form-group">
        <label for="SoftwareBuild">Wersja oprogramowania:</label>
        <select id="SoftwareBuild" class="form-control" @bind="defect.SoftwareBuild">
            @foreach (var release in releases)
            {
                <option value="@release.Name">@release.Name</option>
            }
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Dodaj defekt</button>
</form>

@code {
    private Defect defect = new Defect();
    private string successMessage;
    private string errorMessage;
    private List<Release> releases = new List<Release>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            releases = await Http.GetFromJsonAsync<List<Release>>("api/defect/getReleases");
        }
        catch (Exception ex)
        {
            errorMessage = "Error: " + ex.Message;
        }
    }

    private async Task CreateDefect()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/defect/addDefect", defect);
            if (response.IsSuccessStatusCode)
            {
                successMessage = "Defect submitted.";
                defect = new Defect();
            }
            else
            {
                errorMessage = "Get error during adding defect to database.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Error occurs: " + ex.Message;
        }
    }
}